{"programModules":{"EXT022MI":{"program":"EXT022MI","triggers":{},"transactions":{"AddPDS022":{"sourceUuid":"ad43c199-6f11-43de-907b-3fe8126fe9c3","name":"AddPDS022","program":"EXT022MI","description":"Add MPDSST","active":true,"multi":false,"modified":1697705127421,"modifiedBy":"LUDTRA","outputFields":[],"inputFields":[{"name":"CONO","description":"Company","length":3,"mandatory":true,"type":"N"},{"name":"FACI","description":"Facility","length":3,"mandatory":true,"type":"A"},{"name":"PLGR","description":"Work center","length":8,"mandatory":true,"type":"A"},{"name":"CMKY","description":"Current MO key","length":20,"mandatory":true,"type":"A"},{"name":"CKTP","description":"Current MO key type","length":1,"mandatory":true,"type":"A"},{"name":"CSTY","description":"Current structure type","length":3,"mandatory":true,"type":"A"},{"name":"PMKY","description":"Previous MO key","length":20,"mandatory":false,"type":"A"},{"name":"PKTP","description":"Previous MO key type","length":1,"mandatory":false,"type":"A"},{"name":"PSTY","description":"Previous structure type","length":3,"mandatory":false,"type":"A"},{"name":"FDAT","description":"From date","length":8,"mandatory":false,"type":"N"},{"name":"TDAT","description":"To date","length":8,"mandatory":false,"type":"N"},{"name":"SETI","description":"Setup time","length":9,"mandatory":false,"type":"N"},{"name":"MXID","description":"Selection matrix","length":5,"mandatory":false,"type":"A"},{"name":"CMAC","description":"Current MO matrix column","length":1,"mandatory":false,"type":"N"},{"name":"PMAC","description":"Previous MO matrix column","length":1,"mandatory":false,"type":"N"},{"name":"SETT","description":"Setup time type","length":1,"mandatory":false,"type":"A"}],"utilities":["DateUtil","NumberUtil"]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"ad43c199-6f11-43de-907b-3fe8126fe9c3":{"uuid":"ad43c199-6f11-43de-907b-3fe8126fe9c3","updated":1701685925424,"updatedBy":"LUDTRA","created":1697704824521,"createdBy":"LUDTRA","apiVersion":"0.9","beVersion":"16.0.0.20230918173517.8","language":"GROOVY","codeHash":"E79AEDBF5720E567CE6EDD1932A7F2A61C652F035E05FD4495B94509C821EC5B","code":"LyoqDQogKiBSRUFETUUNCiAqIFRoaXMgZXh0ZW5zaW9uIGlzIGJlaW5nIHRyaWdnZXJlZCBieSBFWFQwMjJNSS9BZGRQRFMwMjINCiAqDQogKiBOYW1lOiBBZGRQRFMwMjINCiAqIERlc2NyaXB0aW9uOiBYVGVuZCBtYWRlIHRvIGluc2VydCBhbGwgdGhlIGVucmVnIGluIE1QRFNTVCANCiAqIERhdGUgICAgICAgQ2hhbmdlZCBCeSAgICAgICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uDQogKiAyMDIzMTAxMyAgIEx1ZG92aWMgVFJBVkVSUyAgICAgICAgICAgICAgICBDcmVhdGUgRVhUMDIyTUlfQWRkUERTMDIyDQogKi8NCiANCnB1YmxpYyBjbGFzcyBBZGRQRFMwMjIgZXh0ZW5kcyBFeHRlbmRNM1RyYW5zYWN0aW9uIHsNCiAgcHJpdmF0ZSBmaW5hbCBNSUFQSSBtaQ0KICBwcml2YXRlIGZpbmFsIERhdGFiYXNlQVBJIGRhdGFiYXNlDQogIHByaXZhdGUgZmluYWwgUHJvZ3JhbUFQSSBwcm9ncmFtDQogIHByaXZhdGUgZmluYWwgVXRpbGl0eUFQSSB1dGlsaXR5DQogIA0KICBwdWJsaWMgQWRkUERTMDIyKE1JQVBJIG1pLCBEYXRhYmFzZUFQSSBkYXRhYmFzZSwgUHJvZ3JhbUFQSSBwcm9ncmFtLCBVdGlsaXR5QVBJIHV0aWxpdHksIE1JQ2FsbGVyQVBJIG1pQ2FsbGVyKSB7DQogICAgdGhpcy5taSA9IG1pDQogICAgdGhpcy5kYXRhYmFzZSA9IGRhdGFiYXNlDQogICAgdGhpcy5wcm9ncmFtID0gcHJvZ3JhbQ0KICAgIHRoaXMudXRpbGl0eSA9IHV0aWxpdHkNCiAgfQ0KICANCiAgaW50IGNvbm8NCiAgU3RyaW5nIGZhY2kNCiAgU3RyaW5nIHBsZ3INCiAgU3RyaW5nIGNoaWQNCiAgY2hhciBja3RwDQogIFN0cmluZyBjbWt5DQogIFN0cmluZyBjc3R5DQogIGNoYXIgcGt0cA0KICBTdHJpbmcgcG1reQ0KICBTdHJpbmcgcHN0eQ0KICANCiAgU3RyaW5nIGZkYXRTDQogIFN0cmluZyB0ZGF0Uw0KICBpbnQgZmRhdA0KICBpbnQgdGRhdA0KICBpbnQgZmRhdEMNCiAgaW50IHRkYXRDDQogIA0KICBkb3VibGUgc2V0aQ0KICBTdHJpbmcgbXhpZA0KICBpbnQgY21hYw0KICBpbnQgcG1hYw0KICBjaGFyIHNldHQNCiAgDQogIHB1YmxpYyB2b2lkIG1haW4oKSB7DQogICAgY29ubyA9IChJbnRlZ2VyKSBwcm9ncmFtLmdldExEQVpEKCkuQ09OTw0KICAgIGlmICghbWkuaW5EYXRhLmdldCgiQ09OTyIpLnRyaW0oKS5pc0VtcHR5KCkpIHsNCiAgICAgIGNvbm8gPSB1dGlsaXR5LmNhbGwoIk51bWJlclV0aWwiLCJwYXJzZVN0cmluZ1RvSW50ZWdlciIsIG1pLmluRGF0YS5nZXQoIkNPTk8iKSkNCiAgICB9DQogICAgY2hpZCA9IHByb2dyYW0uZ2V0VXNlcigpDQogICAgDQogICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiTVBEU1NUIikNCiAgICAgIC5pbmRleCgiMDAiKQ0KICAgICAgLmJ1aWxkKCkNCiAgICANCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIA0KICAgIGNvbnRhaW5lci5zZXQoIlBUQ09OTyIsIGNvbm8pDQogICAgDQogICAgZmFjaSA9IG1pLmluRGF0YS5nZXQoIkZBQ0kiKS50cmltKCkNCiAgICANCiAgICBpZiAoZmFjaS5pc0VtcHR5KCkpIHsNCiAgICAgICBtaS5lcnJvcigiRXRhYmxpc3NlbWVudCBlc3Qgb2JsaWdhdG9pcmUiKQ0KICAgICAgIHJldHVybg0KICAgIH0NCiAgICANCiAgICBwbGdyID0gbWkuaW5EYXRhLmdldCgiUExHUiIpLnRyaW0oKQ0KICAgIA0KICAgIGlmIChwbGdyLmlzRW1wdHkoKSkgew0KICAgICAgIG1pLmVycm9yKCJQb3N0ZSBkZSBjaGFyZ2UgZXN0IG9ibGlnYXRvaXJlIikNCiAgICAgICByZXR1cm4NCiAgICB9DQogICAgDQogICAgaWYgKCFjaGVja1dvcmtDZW50ZXJWYWxpZGl0eShmYWNpLCBwbGdyKSkgew0KICAgICAgcmV0dXJuDQogICAgfQ0KICAgIA0KICAgIGNvbnRhaW5lci5zZXQoIlBURkFDSSIsIG1pLmluRGF0YS5nZXQoIkZBQ0kiKS50cmltKCkpDQogICAgY29udGFpbmVyLnNldCgiUFRQTEdSIiwgbWkuaW5EYXRhLmdldCgiUExHUiIpLnRyaW0oKSkNCiAgICANCiAgICBja3RwID0gbWkuaW5EYXRhLmdldCgiQ0tUUCIpLmNoYXJBdCgwKQ0KICAgIGlmICggKGNrdHAgIT0gJzEnKSAmJiAoY2t0cCAhPSAnMicpICkgew0KICAgICAgbWkuZXJyb3IoIkN1cnJlbnQgTU8ga2V5IHR5cGUgJGNrdHAgaXMgaW52YWxpZCIpDQogICAgICByZXR1cm4NCiAgICB9DQogICAgDQogICAgY21reSA9IG1pLmluRGF0YS5nZXQoIkNNS1kiKS50cmltKCkNCiAgICBjc3R5ID0gbWkuaW5EYXRhLmdldCgiQ1NUWSIpLnRyaW0oKQ0KICAgIGlmIChja3RwID09ICcxJykgew0KICAgICAgaWYgKCFjaGVja1BEUzAwMShmYWNpLCBjbWt5LCBjc3R5KSkgew0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICB9DQogICAgDQogICAgaWYgKGNrdHAgPT0gJzInKSB7DQogICAgICBpZiAoIWNzdHkuaXNFbXB0eSgpKSB7DQogICAgICAgIG1pLmVycm9yKCJTdHJ1Y3R1cmUgdHlwZSBzaG91bGQgbm90IGJlIGVudGVyZWQiKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICB9DQogICAgDQogICAgaWYgKCFtaS5pbkRhdGEuZ2V0KCJDS1RQIikudHJpbSgpLmlzRW1wdHkoKSkgew0KICAgICAgY29udGFpbmVyLnNldCgiUFRDS1RQIiwgbWkuaW5EYXRhLmdldCgiQ0tUUCIpLmNoYXJBdCgwKSkNCiAgICB9DQogICAgZWxzZSB7DQogICAgICBjb250YWluZXIuc2V0KCJQVENLVFAiLCAnICcpDQogICAgfQ0KICAgIA0KICAgIGNvbnRhaW5lci5zZXQoIlBUQ01LWSIsIG1pLmluRGF0YS5nZXQoIkNNS1kiKS50cmltKCkpDQogICAgDQogICAgY29udGFpbmVyLnNldCgiUFRDU1RZIiwgbWkuaW5EYXRhLmdldCgiQ1NUWSIpLnRyaW0oKSkNCiAgIA0KICAgIHBrdHAgPSBtaS5pbkRhdGEuZ2V0KCJQS1RQIikuY2hhckF0KDApDQogICAgaWYgKCAocGt0cCAhPSAnICcpICYmIChwa3RwICE9ICcxJykgJiYgKHBrdHAgIT0gJzInKSApIHsNCiAgICAgIG1pLmVycm9yKCJQcmV2aW91cyBNTyBrZXkgdHlwZSAkcGt0cCBpcyBpbnZhbGlkIikNCiAgICAgIHJldHVybg0KICAgIH0NCiAgICANCiAgICBwbWt5ID0gbWkuaW5EYXRhLmdldCgiUE1LWSIpLnRyaW0oKQ0KICAgIHBzdHkgPSBtaS5pbkRhdGEuZ2V0KCJQU1RZIikudHJpbSgpDQogICAgaWYgKHBrdHAgPT0gJyAnKSB7DQogICAgICBpZiAoIXBta3kuaXNFbXB0eSgpIHx8ICFwc3R5LmlzRW1wdHkoKSkgew0KICAgICAgICBtaS5lcnJvcigiUHJldmlvdXMgTU8ga2V5IHR5cGUgJHBrdHAgaXMgaW52YWxpZCIpDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBpZiAocGt0cCA9PSAnMScpIHsNCiAgICAgIGlmICghY2hlY2tQRFMwMDEoZmFjaSwgcG1reSwgcHN0eSkpIHsNCiAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgfQ0KICAgIA0KICAgIGlmIChwa3RwID09ICcyJykgew0KICAgICAgaWYgKCFwc3R5LmlzRW1wdHkoKSkgew0KICAgICAgICBtaS5lcnJvcigiU3RydWN0dXJlIHR5cGUgc2hvdWxkIG5vdCBiZSBlbnRlcmVkIikNCiAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgfQ0KICAgIA0KICAgIGlmICghbWkuaW5EYXRhLmdldCgiUEtUUCIpLnRyaW0oKS5pc0VtcHR5KCkpIHsNCiAgICAgIGNvbnRhaW5lci5zZXQoIlBUUEtUUCIsIG1pLmluRGF0YS5nZXQoIlBLVFAiKS5jaGFyQXQoMCkpDQogICAgfQ0KICAgIGVsc2Ugew0KICAgICAgY29udGFpbmVyLnNldCgiUFRQS1RQIiwgJyAnKQ0KICAgIH0NCiAgICBjb250YWluZXIuc2V0KCJQVFBNS1kiLCBtaS5pbkRhdGEuZ2V0KCJQTUtZIikudHJpbSgpKQ0KICAgIGNvbnRhaW5lci5zZXQoIlBUUFNUWSIsIG1pLmluRGF0YS5nZXQoIlBTVFkiKS50cmltKCkpDQogICAgDQogICAgZmRhdCA9IHV0aWxpdHkuY2FsbCgiTnVtYmVyVXRpbCIsInBhcnNlU3RyaW5nVG9JbnRlZ2VyIiwgbWkuaW5EYXRhLmdldCgiRkRBVCIpKQ0KICAgIGZkYXRTID0gbWkuaW5EYXRhLmdldCgiRkRBVCIpLnRyaW0oKQ0KICAgIA0KICAgIGlmICghdXRpbGl0eS5jYWxsKCJEYXRlVXRpbCIsImlzRGF0ZVZhbGlkIiwgZmRhdFMsICJ5eXl5TU1kZCIpKSB7DQogICAgICAgbWkuZXJyb3IoIkRhdGUgZGUgZMOpYnV0ICRmZGF0UyBuJ2VzdCBwYXMgdmFsaWRlIikNCiAgICAgICByZXR1cm4NCiAgICB9DQogICAgDQogICAgdGRhdCA9IHV0aWxpdHkuY2FsbCgiTnVtYmVyVXRpbCIsInBhcnNlU3RyaW5nVG9JbnRlZ2VyIiwgbWkuaW5EYXRhLmdldCgiVERBVCIpKQ0KICAgIHRkYXRTID0gbWkuaW5EYXRhLmdldCgiVERBVCIpLnRyaW0oKQ0KDQogICAgaWYgKCF0ZGF0Uy5pc0VtcHR5KCkpIHsNCiAgICAgIGlmICghdXRpbGl0eS5jYWxsKCJEYXRlVXRpbCIsImlzRGF0ZVZhbGlkIiwgdGRhdFMsICJ5eXl5TU1kZCIpKSB7DQogICAgICAgICBtaS5lcnJvcigiRGF0ZSBkZSBmaW4gJHRkYXRTIG4nZXN0IHBhcyB2YWxpZGUiKQ0KICAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgICANCiAgICAgIGlmICh0ZGF0IDwgZmRhdCkgew0KICAgICAgICAgbWkuZXJyb3IoIkRhdGUgZGUgZmluICR0ZGF0UyBuZSBwZXV0IHBhcyDDqnRyZSBpbmbDqXJpZXVyZSDDoCBkYXRlIGRlIGTDqWJ1dCAkZmRhdFMgIikNCiAgICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICANCiAgICAgIGlmICghY2hlY2tEYXRlc1ZhbGlkaXR5KGZkYXQsIHRkYXQpKSB7DQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgIH0NCiAgICANCiAgICBjb250YWluZXIuc2V0KCJQVEZEQVQiLCBmZGF0KQ0KICAgIA0KICAgIGlmICghcXVlcnkucmVhZChjb250YWluZXIpKSB7DQogICAgICBjb250YWluZXIuc2V0KCJQVFREQVQiLCB1dGlsaXR5LmNhbGwoIk51bWJlclV0aWwiLCJwYXJzZVN0cmluZ1RvSW50ZWdlciIsIG1pLmluRGF0YS5nZXQoIlREQVQiKSkpDQogICAgICANCiAgICAgIHNldGkgPSB1dGlsaXR5LmNhbGwoIk51bWJlclV0aWwiLCJwYXJzZVN0cmluZ1RvRG91YmxlIiwgbWkuaW5EYXRhLmdldCgiU0VUSSIpKQ0KICAgICAgbXhpZCA9IG1pLmluRGF0YS5nZXQoIk1YSUQiKS50cmltKCkNCiAgICAgIGlmIChzZXRpIDwgMCkgew0KICAgICAgICBtaS5lcnJvcigiU2V0dXAgdGltZSAkc2V0aSBpcyBpbnZhbGlkIikNCiAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgICANCiAgICAgIGlmICgoc2V0aSA+IDApICYmICFteGlkLmlzRW1wdHkoKSkgew0KICAgICAgICBtaS5lcnJvcigiT25seSBvbmUgb2Ygc2V0dXAgdGltZSBhbmQgbWF0cml4X0lEIHNob3VsZCBiZSBlbnRlcmVkIikNCiAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgIA0KICAgICAgY21hYyA9IHV0aWxpdHkuY2FsbCgiTnVtYmVyVXRpbCIsInBhcnNlU3RyaW5nVG9JbnRlZ2VyIiwgbWkuaW5EYXRhLmdldCgiQ01BQyIpKQ0KICAgICAgcG1hYyA9IHV0aWxpdHkuY2FsbCgiTnVtYmVyVXRpbCIsInBhcnNlU3RyaW5nVG9JbnRlZ2VyIiwgbWkuaW5EYXRhLmdldCgiUE1BQyIpKQ0KICAgICAgaWYgKCFteGlkLmlzRW1wdHkoKSkgew0KICAgICAgICBpZiAoIWNoZWNrTVBNWElEKG14aWQpKSB7DQogICAgICAgICAgcmV0dXJuDQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgICANCiAgICAgIHNldHQgPSBtaS5pbkRhdGEuZ2V0KCJTRVRUIikuY2hhckF0KDApDQogICAgICBpZiAoKHNldHQgIT0gJzEnKSAmJiAoc2V0dCAhPSAnMicpKSB7DQogICAgICAgIG1pLmVycm9yKCJTZXR1cCB0aW1lIHR5cGUgJHNldHQgaXMgaW52YWxpZCIpDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgDQogICAgICBjb250YWluZXIuc2V0KCJQVFNFVEkiLCB1dGlsaXR5LmNhbGwoIk51bWJlclV0aWwiLCJwYXJzZVN0cmluZ1RvRG91YmxlIiwgbWkuaW5EYXRhLmdldCgiU0VUSSIpKSkNCiAgICAgIGNvbnRhaW5lci5zZXQoIlBUTVhJRCIsIG1pLmluRGF0YS5nZXQoIk1YSUQiKS50cmltKCkpDQogICAgICBjb250YWluZXIuc2V0KCJQVENNQUMiLCB1dGlsaXR5LmNhbGwoIk51bWJlclV0aWwiLCJwYXJzZVN0cmluZ1RvSW50ZWdlciIsIG1pLmluRGF0YS5nZXQoIkNNQUMiKSkpDQogICAgICBjb250YWluZXIuc2V0KCJQVFBNQUMiLCB1dGlsaXR5LmNhbGwoIk51bWJlclV0aWwiLCJwYXJzZVN0cmluZ1RvSW50ZWdlciIsIG1pLmluRGF0YS5nZXQoIlBNQUMiKSkpDQogICAgICBpZiAoIW1pLmluRGF0YS5nZXQoIlNFVFQiKS50cmltKCkuaXNFbXB0eSgpKSB7DQogICAgICAgIGNvbnRhaW5lci5zZXQoIlBUU0VUVCIsIG1pLmluRGF0YS5nZXQoIlNFVFQiKS5jaGFyQXQoMCkpDQogICAgICB9DQogICAgICBlbHNlIHsNCiAgICAgICAgY29udGFpbmVyLnNldCgiUFRTRVRUIiwgJyAnKQ0KICAgICAgfQ0KICAgICANCiAgICAgIGNvbnRhaW5lci5zZXQoIlBUUkdEVCIsIHV0aWxpdHkuY2FsbCgiRGF0ZVV0aWwiLCJjdXJyZW50RGF0ZVk4QXNJbnQiKSkNCiAgICAgIGNvbnRhaW5lci5zZXQoIlBUUkdUTSIsIHV0aWxpdHkuY2FsbCgiRGF0ZVV0aWwiLCJjdXJyZW50VGltZUFzSW50IikpDQogICAgICBjb250YWluZXIuc2V0KCJQVExNRFQiLCB1dGlsaXR5LmNhbGwoIkRhdGVVdGlsIiwiY3VycmVudERhdGVZOEFzSW50IikpDQogICAgICBjb250YWluZXIuc2V0KCJQVENITk8iLCAxKQ0KICAgICAgY29udGFpbmVyLnNldCgiUFRDSElEIiwgY2hpZCkNCiAgICAgIA0KICAgICAgcXVlcnkuaW5zZXJ0KGNvbnRhaW5lcikNCiAgICB9IGVsc2Ugew0KICAgICAgbWkuZXJyb3IoIkVucmVnaXN0cmVtZW50IGTDqWrDoCBleGlzdGFudCBkYW5zIGxhIHRhYmxlIE1QRFNTVC4iKQ0KICAgICAgcmV0dXJuDQogICAgfQ0KICB9DQogIA0KICAvKioNCiAgKiBPbiB2w6lyaWZpZSBzaSBsZSBGQUNJIHBhc3PDqSBlbiBwYXJhbcOodHJlIGQnZW50csOpZSBleGlzdGUgZW4gQ1JTMDA4PUNGQUNJTA0KICAqLw0KICBwcml2YXRlIGJvb2xlYW4gY2hlY2tGYWNpbGl0eUV4aXN0KFN0cmluZyBGQUNJKSB7DQogICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiQ0ZBQ0lMIikNCiAgICAgIC5pbmRleCgiMDAiKQ0KICAgICAgLmJ1aWxkKCkNCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIkNGQ09OTyIsIGNvbm8pDQogICAgY29udGFpbmVyLnNldCgiQ0ZGQUNJIiwgRkFDSSkNCiAgICANCiAgICByZXR1cm4gcXVlcnkucmVhZChjb250YWluZXIpDQogIH0NCiAgDQogIC8qKg0KICAqIE9uIHbDqXJpZmllIHNpIGxlIFBMR1IgcGFzc8OpIGVuIHBhcmFtw6h0cmUgZCdlbnRyw6llIGV4aXN0ZSBlbiBQRFMwMTA9TVBEV0NUDQogICovDQogIHByaXZhdGUgYm9vbGVhbiBjaGVja1dvcmtDZW50ZXJWYWxpZGl0eShTdHJpbmcgRkFDSSwgU3RyaW5nIFBMR1IpIHsNCiAgICANCiAgICBjaGFyIFBMVFAgPSAnICcNCiAgICBpbnQgQVBTQSA9IDANCiAgICANCiAgICBEQkFjdGlvbiBxdWVyeTEgPSBkYXRhYmFzZS50YWJsZSgiQ0ZBQ0lMIikNCiAgICAgIC5pbmRleCgiMDAiKQ0KICAgICAgLnNlbGVjdGlvbigiQ0ZBUFNBIikNCiAgICAgIC5idWlsZCgpDQogICAgREJDb250YWluZXIgY29udGFpbmVyMSA9IHF1ZXJ5MS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lcjEuc2V0KCJDRkNPTk8iLCBjb25vKQ0KICAgIGNvbnRhaW5lcjEuc2V0KCJDRkZBQ0kiLCBGQUNJKQ0KICAgIGlmICghcXVlcnkxLnJlYWQoY29udGFpbmVyMSkpIHsNCiAgICAgIG1pLmVycm9yKCJFdGFibGlzc2VtZW50ICRGQUNJIGluZXhpc3RhbnQgZW4gQ1JTMDA4IikNCiAgICAgIHJldHVybiBmYWxzZQ0KICAgIH0NCiAgICBlbHNlIHsNCiAgICAgIEFQU0EgPSBjb250YWluZXIxLmdldCgiQ0ZBUFNBIikNCiAgICB9DQogICAgDQogICAgREJBY3Rpb24gcXVlcnkyID0gZGF0YWJhc2UudGFibGUoIk1QRFdDVCIpDQogICAgICAuaW5kZXgoIjAwIikNCiAgICAgIC5zZWxlY3Rpb24oIlBQUExUUCIpDQogICAgICAuYnVpbGQoKQ0KICAgIERCQ29udGFpbmVyIGNvbnRhaW5lcjIgPSBxdWVyeTIuZ2V0Q29udGFpbmVyKCkNCiAgICBjb250YWluZXIyLnNldCgiUFBDT05PIiwgY29ubykNCiAgICBjb250YWluZXIyLnNldCgiUFBGQUNJIiwgRkFDSSkNCiAgICBjb250YWluZXIyLnNldCgiUFBQTEdSIiwgUExHUikNCiAgICBpZiAoIXF1ZXJ5Mi5yZWFkKGNvbnRhaW5lcjIpKSB7DQogICAgICBtaS5lcnJvcigiV29ya0NlbnRlciAkUExHUiBpbmV4aXN0YW50IGVuIFBEUzAxMCIpDQogICAgICByZXR1cm4gZmFsc2UNCiAgICB9DQogICAgZWxzZSB7DQogICAgICBQTFRQID0gY29udGFpbmVyMi5nZXQoIlBQUExUUCIpDQogICAgfQ0KICAgIA0KICAgIGlmICggKFBMVFAgIT0gJzEnKSAmJiAoUExUUCAhPSAnMicpICYmIChQTFRQICE9ICc2JykgKSB7DQogICAgICAgbWkuZXJyb3IoIldvcmsgY2VudGVyIGhhcyByZXNvdXJjZSB0eXBlICRQTFRQIC0gZW50cnkgbm90IHBlcm1pdHRlZCIpDQogICAgICAgcmV0dXJuIGZhbHNlDQogICAgfQ0KICAgIGlmIChBUFNBID09IDEpIHsNCiAgICAgIGlmIChQTFRQICE9ICc2Jykgew0KICAgICAgICBtaS5lcnJvcigiQVBQIGlzIGFjdGl2ZSAtIHJlc291cmNlIHR5cGUgJFBMVFAgaW52YWxpZCIpDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gdHJ1ZQ0KICB9DQogIA0KICAvKioNCiAgKiBPbiB2w6lyaWZpZSBzaSBsZSBwcm9kdWl0IHBhc3PDqSBlbiBwYXJhbcOodHJlIGQnZW50csOpZSBleGlzdGUgZW4gUERTMDAxID0gTVBESEVEDQogICovDQogIHByaXZhdGUgYm9vbGVhbiBjaGVja1BEUzAwMShTdHJpbmcgRkFDSSwgU3RyaW5nIFBSTk8sIFN0cmluZyBTVFJUKSB7DQogICAgDQogICAgREJBY3Rpb24gcXVlcnkgPSBkYXRhYmFzZS50YWJsZSgiTVBESEVEIikNCiAgICAgIC5pbmRleCgiMDAiKQ0KICAgICAgLmJ1aWxkKCkNCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIlBIQ09OTyIsIGNvbm8pDQogICAgY29udGFpbmVyLnNldCgiUEhGQUNJIiwgRkFDSSkNCiAgICBjb250YWluZXIuc2V0KCJQSFBSTk8iLCBQUk5PKQ0KICAgIGNvbnRhaW5lci5zZXQoIlBIU1RSVCIsIFNUUlQpDQogICAgaWYgKCFxdWVyeS5yZWFkKGNvbnRhaW5lcikpIHsNCiAgICAgIG1pLmVycm9yKCJQcm9kdWl0ICRQUk5PIGluZXhpc3RhbnQgZW4gUERTMDAxIikNCiAgICAgIHJldHVybiBmYWxzZQ0KICAgIH0NCiAgICByZXR1cm4gdHJ1ZQ0KICB9IA0KICANCiAgLyoqDQogICogT24gdsOpcmlmaWUgc2kgbGVzIGludGVydmFsbGVzIGRlIGRhdGUgc29udCB2YWxpZGVzDQogICovDQogIHByaXZhdGUgYm9vbGVhbiBjaGVja0RhdGVzVmFsaWRpdHkoaW50IEZEQVQsIGludCBUREFUKSB7DQogICAgDQogICAgYm9vbGVhbiBPSw0KICAgIE9LID0gdHJ1ZQ0KICAgIA0KICAgIERCQWN0aW9uIHF1ZXJ5ID0gZGF0YWJhc2UudGFibGUoIk1QRFNTVCIpDQogICAgICAuaW5kZXgoIjAwIikNCiAgICAgIC5zZWxlY3Rpb24oIlBURkRBVCIsICJQVFREQVQiKQ0KICAgICAgLmJ1aWxkKCkNCiAgICANCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIlBUQ09OTyIsIGNvbm8pDQogICAgY29udGFpbmVyLnNldCgiUFRGQUNJIiwgZmFjaSkNCiAgICBjb250YWluZXIuc2V0KCJQVFBMR1IiLCBwbGdyKQ0KICAgIGNvbnRhaW5lci5zZXQoIlBUQ01LWSIsIGNta3kpDQogICAgY29udGFpbmVyLnNldCgiUFRDS1RQIiwgY2t0cCkNCiAgICBjb250YWluZXIuc2V0KCJQVENTVFkiLCBjc3R5KQ0KICAgIGNvbnRhaW5lci5zZXQoIlBUUE1LWSIsIHBta3kpDQogICAgY29udGFpbmVyLnNldCgiUFRQS1RQIiwgcGt0cCkNCiAgICBjb250YWluZXIuc2V0KCJQVFBTVFkiLCBwc3R5KQ0KICAgIA0KICAgIENsb3N1cmU8Pz4gcmVsZWFzZWRJdGVtUHJvY2Vzc29yID0gew0KICAgICAgREJDb250YWluZXIgZGF0YSAtPg0KICAgICAgZmRhdEMgPSBkYXRhLmdldCgiUFRGREFUIikNCiAgICAgIHRkYXRDID0gZGF0YS5nZXQoIlBUVERBVCIpDQogICAgICBpZiAoKGZkYXRDIDw9IEZEQVQpICYmICh0ZGF0QyA+PSBGREFUKSkgew0KICAgICAgICBtaS5lcnJvcigiRnJvbSBkYXRlIGlzIGluc2lkZSBhbm90aGVyIHJlY29yZMK0cyBpbnRlcnZhbCIpDQogICAgICAgIE9LID0gZmFsc2UNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9DQogICAgfQ0KICAgIA0KICAgIHF1ZXJ5LnJlYWRBbGwoY29udGFpbmVyLCA5LCByZWxlYXNlZEl0ZW1Qcm9jZXNzb3IpDQogICAgcmV0dXJuIE9LDQogIH0gDQogIA0KICAvKioNCiAgKiBPbiB2w6lyaWZpZSBzaSBsZSBwcm9kdWl0IHBhc3PDqSBlbiBwYXJhbcOodHJlIGQnZW50csOpZSBleGlzdGUgZGFucyBNUE1YSUQNCiAgKi8NCiAgcHJpdmF0ZSBib29sZWFuIGNoZWNrTVBNWElEKFN0cmluZyBNWElEKSB7DQogICAgaW50IE1YVFAgPSAwDQogICAgaW50IFhJID0gY21hYyArIHBtYWMNCiAgICANCiAgICBEQkFjdGlvbiBxdWVyeSA9IGRhdGFiYXNlLnRhYmxlKCJNUE1YSUQiKQ0KICAgICAgLmluZGV4KCIwMCIpDQogICAgICAuc2VsZWN0aW9uKCJRQU1YVFAiKQ0KICAgICAgLmJ1aWxkKCkNCiAgICBEQkNvbnRhaW5lciBjb250YWluZXIgPSBxdWVyeS5nZXRDb250YWluZXIoKQ0KICAgIGNvbnRhaW5lci5zZXQoIlFBQ09OTyIsIGNvbm8pDQogICAgY29udGFpbmVyLnNldCgiUUFNWElEIiwgTVhJRCkNCiAgICBpZiAoIXF1ZXJ5LnJlYWQoY29udGFpbmVyKSkgew0KICAgICAgbWkuZXJyb3IoIlNjYWxlICRNWElEIGRvZXMgbm90IGV4aXN0IikNCiAgICAgIHJldHVybiBmYWxzZQ0KICAgIH0NCiAgICBlbHNlIHsNCiAgICAgIE1YVFAgPSBjb250YWluZXIuZ2V0KCJRQU1YVFAiKQ0KICAgICAgaWYgKE1YVFAgIT0gMSkgew0KICAgICAgICBtaS5lcnJvcigiU2VsZWN0aW9uIG1hdHJpeCB0eXBlICZNWElEIGlzIGludmFsaWQiKQ0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0NCiAgICAgIGlmIChYSSA9PSAwKSB7DQogICAgICAgIG1pLmVycm9yKCJDb2x1bW4gJmNtYWMgZG9lcyBub3QgZXhpc3QiKQ0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0NCiAgICAgIGlmIChYSSA+IDkpIHsNCiAgICAgICAgbWkuZXJyb3IoIkNvbHVtbiAmWEkgaXMgaW52YWxpZCIpDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gdHJ1ZQ0KICB9IA0KfQ=="}}}